<?xml version="1.0"?>

<!-- 

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  IFRA (Intelligent Flexible Robotics and Assembly) Group, CRANFIELD UNIVERSITY        #
#  Created on behalf of the IFRA Group at Cranfield University, United Kingdom          #
#  E-mail: IFRA@cranfield.ac.uk                                                         #
#                                                                                       #
#  Licensed under the Apache-2.0 License.                                               #
#  You may not use this file except in compliance with the License.                     #
#  You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0  #
#                                                                                       #
#  Unless required by applicable law or agreed to in writing, software distributed      #
#  under the License is distributed on an "as-is" basis, without warranties or          #
#  conditions of any kind, either express or implied. See the License for the specific  #
#  language governing permissions and limitations under the License.                    #
#                                                                                       #
#  IFRA Group - Cranfield University                                                    #
#  AUTHORS: Mikel Bueno Viso - Mikel.Bueno-Viso@cranfield.ac.uk                         #
#           Dr. Seemal Asif  - s.asif@cranfield.ac.uk                                   #
#           Prof. Phil Webb  - p.f.webb@cranfield.ac.uk                                 #
#                                                                                       #
#  Date: April, 2023.                                                                   #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  Some of the information used to build the LBR-IIWA robot .urdf files in this ROS2    #
#  repository has been taken from the following resource:                               #
#       - ros-industrial https://github.com/ros-industrial/kuka_experimental            #
#                                                                                       #
#  AUTHORS:                                                                             #
#       - ROS-Industrial - https://rosindustrial.org                                    #
#       - G.A. vd. Hoorn (TU Delft Robotics Institute) - g.a.vanderhoorn@tudelft.nl     #
#       - Levi Armstrong (Southwest Research Institute) - levi.armstrong@swri.org       #
#                                                                                       #
#  COPYRIGHT - ROS-Industrial                                                           #
#  (ORIGINAL LICENSE) -> Licensed under the Apache-2.0 License.                         #
#                                                                                       #
#  CHANGES MADE:                                                                        #
#  The original files contain the .urdf information of the robot for ROS1, and these    #
#  have been modified for ROS2.                                                         #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ======= CITE OUR WORK ======= #
# You can cite our work with the following statement:
# IFRA-Cranfield (2023) ROS 2 Sim-to-Real Robot Control. URL: https://github.com/IFRA-Cranfield/ros2_SimRealRobotControl.

-->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="irb120_ros2control" params="bringup robot_ip EE EE_name" >

    <!-- 1. ROS2_CONTROL tag name: -->
    <!-- A. GAZEBO SIMULATION: -->
    <xacro:unless value="${bringup}">
      <xacro:property name="name" value="GazeboSystem"/>
    </xacro:unless>
    <!-- B. ROBOT BRINGUP: -->
    <xacro:if value="${bringup}">
      <xacro:property name="name" value="ABBMultiInterfaceHardware"/>
    </xacro:if>

    <!-- 3. Load ROS2_CONTROL: -->
    <ros2_control name="${name}" type="system">

      <!-- A. GAZEBO SIMULATION: -->
      <xacro:unless value="${bringup}">
        <hardware>
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
      </xacro:unless>

      <!-- B. ROBOT BRINGUP: -->
      <xacro:if value="${bringup}">
        <hardware>
          <plugin>abb_hardware_interface/ABBSystemHardware</plugin>
          <param name="rws_port">80</param>
          <param name="rws_ip">${robot_ip}</param>
          <param name="egm_port">6511</param>
        </hardware>
      </xacro:if>

      <!-- irb120_joint1 -->
      <joint name="joint_1">
        <command_interface name="position">
          <param name="min">-2.87979</param>
          <param name="max">2.87979</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.36332</param>
          <param name="max">4.36332</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- irb120_joint2 -->
      <joint name="joint_2">
        <command_interface name="position">
          <param name="min">-1.91986</param>
          <param name="max">1.91986</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.36332</param>
          <param name="max">4.36332</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- irb120_joint3 -->
      <joint name="joint_3">
        <command_interface name="position">
          <param name="min">-1.91986</param>
          <param name="max">1.22173</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.36332</param>
          <param name="max">4.36332</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- irb120_joint4 -->
      <joint name="joint_4">
        <command_interface name="position">
          <param name="min">-2.79253</param>
          <param name="max">2.79253</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-5.58505</param>
          <param name="max">5.58505</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- irb120_joint5 -->
      <joint name="joint_5">
        <command_interface name="position">
          <param name="min">-2.00</param>       <!-- Joint5 limits lowered to +-2rad -->
          <param name="max">2.00</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-5.58505</param>
          <param name="max">5.58505</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">1.570796</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- irb120_joint6 -->
      <joint name="joint_6">
        <command_interface name="position">
          <param name="min">-6.98132</param> 
          <param name="max">6.98132</param> 
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-7.33038</param>
          <param name="max">7.33038</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity"/>
      </joint>

      <!-- END EFFECTOR -->
      <xacro:unless value="${bringup}">
        <xacro:if value="${EE}">
          <xacro:include filename="$(find ros2srrc_endeffectors)/${EE_name}/urdf/${EE_name}_ros2control.xacro" />
          <xacro:EE_ros2control />
        </xacro:if>
      </xacro:unless>

    </ros2_control>

    <xacro:unless value="${bringup}">

      <gazebo reference="base_link">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_1">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_2">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_3">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_4">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_5">
        <selfCollide>false</selfCollide>
      </gazebo>
      <gazebo reference="link_6">
        <selfCollide>false</selfCollide>
      </gazebo>
    
      <gazebo reference="end_effector_frame_fixed_joint">
        <preserveFixedJoint>true</preserveFixedJoint>
        <!-- For compatibility with SDFormat < 4.4 -->
        <disableFixedJointLumping>true</disableFixedJointLumping>
      </gazebo>

    </xacro:unless>

  </xacro:macro>

</robot>